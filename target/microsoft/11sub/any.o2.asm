; Listing generated by Microsoft (R) Optimizing Compiler Version 19.15.26732.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	array1_size
PUBLIC	array1
PUBLIC	temp
_DATA	SEGMENT
COMM	array2:DWORD:020000H
_DATA	ENDS
_BSS	SEGMENT
temp	DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
array1_size DD	010H
	ORG $+12
array1	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	08H
	DD	09H
	DD	0aH
	DD	0bH
	DD	0cH
	DD	0dH
	DD	0eH
	DD	0fH
	DD	010H
_DATA	ENDS
PUBLIC	mymemcmp
PUBLIC	victim_function_v11
EXTRN	__ImageBase:BYTE
; Function compile flags: /Ogtpy
;	COMDAT victim_function_v11
_TEXT	SEGMENT
x$ = 8
victim_function_v11 PROC				; COMDAT
; File c:\users\ekans\appdata\local\temp\spect.c
; Line 13
	mov	eax, DWORD PTR array1_size
	cmp	rcx, rax
	jae	SHORT $LN2@victim_fun
; Line 14
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR array1[rdx+rcx*4]
	shl	eax, 9
	movsxd	rcx, eax
; Line 26
	movzx	eax, BYTE PTR array2[rdx+rcx*4]
	movzx	ecx, BYTE PTR temp
	sub	ecx, eax
; Line 14
	mov	DWORD PTR temp, ecx
$LN2@victim_fun:
; Line 15
	ret	0
victim_function_v11 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT mymemcmp
_TEXT	SEGMENT
str1$ = 8
str2$ = 16
count$ = 24
mymemcmp PROC						; COMDAT
; File c:\users\ekans\appdata\local\temp\spect.c
; Line 18
	mov	r9, rcx
; Line 21
	test	r8, r8
	jne	SHORT $LN6@mymemcmp
	xor	eax, eax
; Line 27
	ret	0
$LN6@mymemcmp:
; Line 22
	sub	r8, 1
	je	SHORT $LN3@mymemcmp
$LL2@mymemcmp:
	movzx	eax, BYTE PTR [rdx]
	cmp	BYTE PTR [r9], al
	jne	SHORT $LN3@mymemcmp
; Line 23
	inc	r9
; Line 24
	inc	rdx
	sub	r8, 1
	jne	SHORT $LL2@mymemcmp
$LN3@mymemcmp:
; Line 26
	movzx	ecx, BYTE PTR [rdx]
	movzx	eax, BYTE PTR [r9]
	sub	eax, ecx
; Line 27
	ret	0
mymemcmp ENDP
_TEXT	ENDS
END
